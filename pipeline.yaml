apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: microservicedemo-pipeline
spec:
  resources:
    - name: level3-project
      type: git
  params:
    - name: shipping-imagename
      default: "raghadq/shipping:testing"
    - name: kubeaction
      default: apply
    - name: outputfile
      default: "" 
    - name: shipping-manifestfile
      default:
    - name: shipping-manifestfilesvc
      default:

    - name: carts-imagename
      default: "raghadq/carts:testing"
    - name: carts-manifestfile
      default:
    - name: carts-manifestfilesvc
      default:
    - name: carts-manifestfiledb
      default:
    - name: carts-manifestfiledbsvc

    - name: orders-imagename
      default: "raghadq/orders"
    - name: orders-manifestfile
      default:
    - name: orders-manifestfilesvc
      default:
    - name: orders-manifestfiledb
      default:
    - name: orders-manifestfiledbsvc
      default:

    - name: payment-imagename
      default: "raghadq/payment"
    - name: payment-manifestfile
      default:
    - name: payment-manifestfilesvc
      default:

    - name: catalogue-imagename
      default: "raghadq/catalogue"
    - name: catalogue-imagenamedb
      default: "raghadq/catalogue-db"
    - name: catalogue-manifestfile
      default:
    - name: catalogue-manifestfilesvc
      default:
    - name: catalogue-manifestfiledb
      default:
    - name: catalogue-manifestfiledbsvc
      default:
   
    - name: user-imagename
      default: "raghadq/user"
    - name: user-imagenamedb
      default: "raghadq/user-db"
    - name: user-manifestfile
      default:
    - name: user-manifestfilesvc
      default:
    - name: user-manifestfiledb
      default:
    - name: user-manifestfiledbsvc
      default:

    - name: frontend-imagename
      default: "raghadq/frontend"
    - name: frontend-manifestfile
      default:
    - name: frontend-manifestfilesvc
      default:
    - name: manifestfileingress
      default:

    - name: test-imagename
      default: "raghadq/e2e-test"

  tasks:
    - name: deploy-pods-shipping
      taskRef:
        name: shipping-deploy
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.shipping-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-shipping
      taskRef: 
        name: shipping-svc
      runAfter:
        - deploy-pods-shipping
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.shipping-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-db-carts
      taskRef:
        name: cartsdb-deploy
      runAfter:
        - deploy-service-shipping
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.carts-manifestfiledb)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-db-carts
      taskRef:
        name: cartsdb-svc
      runAfter:
        - deploy-pods-db-carts
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.carts-manifestfiledbsvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-carts
      taskRef:
        name: carts-deploy
      runAfter:
        - deploy-service-db-carts
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.carts-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-carts
      taskRef:
        name: carts-svc
      runAfter:
        - deploy-pods-carts
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.carts-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-db-orders
      taskRef:
        name: ordersdb-deploy
      runAfter:
        - deploy-service-carts
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.orders-manifestfiledb)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-db-orders
      taskRef:
        name: ordersdb-svc
      runAfter:
        - deploy-pods-db-orders
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.orders-manifestfiledbsvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-orders
      taskRef:
        name: orders-deploy
      runAfter:
        - deploy-service-db-orders
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.orders-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-orders
      taskRef:
        name: orders-svc
      runAfter:
        - deploy-pods-orders
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.orders-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-payment
      taskRef:
        name: payment-deploy
      runAfter: 
        - deploy-service-orders
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.payment-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-payment
      taskRef: 
        name: payment-svc
      runAfter:
        - deploy-pods-payment
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.payment-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-db-catalogue
      taskRef:
        name: cataloguedb-deploy
      runAfter:
        - deploy-service-payment
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.catalogue-manifestfiledb)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-db-catalogue
      taskRef:
        name: cataloguedb-svc
      runAfter:
        - deploy-pods-db-catalogue
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.catalogue-manifestfiledbsvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-catalogue
      taskRef:
        name: catalogue-deploy
      runAfter:
        - build-docker-catalogue
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.catalogue-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-catalogue
      taskRef:
        name: catalogue-svc
      runAfter:
        - deploy-pods-catalogue
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.catalogue-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-db-user
      taskRef:
        name: userdb-deploy
      runAfter:
        - deploy-service-catalogue
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.user-manifestfiledb)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-db-user
      taskRef:
        name: userdb-svc
      runAfter:
        - deploy-pods-db-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.user-manifestfiledbsvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-user
      taskRef:
        name: user-deploy
      runAfter:
        - deploy-service-db-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.user-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-user
      taskRef:
        name: user-svc
      runAfter:
        - deploy-pods-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.user-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-frontend
      taskRef:
        name: frontend-deploy
      runAfter:
        - deploy-service-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.frontend-manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-frontend
      taskRef:
        name: frontend-svc
      runAfter:
        - deploy-pods-frontend
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.frontend-manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-ingress
      taskRef:
        name: frontend-ingress
      runAfter:
        - deploy-service-frontend
      params: 
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.manifestfileingress)"
      - name: output
        value: "$(params.outputfile)"

