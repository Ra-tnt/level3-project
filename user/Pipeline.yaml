apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: user-pipeline
spec:
  resources:
    - name: level3-project
      type: git
  params:
    - name: imagename
      default: "raghadq/user"
    - name: dockerfilepath
      default: /workspace/level3-project/user/Dockerfile
    - name: contextpath
      default: /workspace/level3-project/user
    - name: imagenamedb
      default: "raghadq/user-db"
    - name: dockerfilepathdb
      default: /workspace/level3-project/user/user-db/Dockerfile
    - name: contextpathdb
      default: /workspace/level3-project/user/user-db
    - name: extraargsvalue
      default: ""
    - name: builderimage
      default: gcr.io/kaniko-project/executor:latest
    - name: kubeaction
      default: apply
    - name: manifestfile
      default:
    - name: outputfile
      default: "" 
    - name: manifestfilesvc
      default:
    - name: manifestfiledb
      default:
    - name: manifestfiledbsvc
      default:  
  tasks:
    - name: build-docker-userdb
      taskRef:
        name: build-push-userdb
#      runAfter:
#        - build-docker-user
      resources:
        inputs:
          - name: level3-project
            resource: level3-project
      params:
      - name: IMAGE
        value: "$(params.imagenamedb)"
      - name: DOCKERFILE
        value: "$(params.dockerfilepathdb)"
      - name: CONTEXT
        value: "$(params.contextpathdb)"
      - name: EXTRA_ARGS
        value: "$(params.extraargsvalue)"
      - name: BUILDER_IMAGE
        value: "$(params.builderimage)"
    - name: build-docker-user
      taskRef:
        name: build-push-user
      runAfter:
        - build-docker-userdb
      resources:
        inputs:
          - name: level3-project
            resource: level3-project
      params:
      - name: IMAGE
        value: "$(params.imagename)"
      - name: DOCKERFILE
        value: "$(params.dockerfilepath)"
      - name: CONTEXT
        value: "$(params.contextpath)"
      - name: EXTRA_ARGS
        value: "$(params.extraargsvalue)"
      - name: BUILDER_IMAGE
        value: "$(params.builderimage)"
    - name: deploy-pods-db-user
      taskRef:
        name: userdb-deploy
      runAfter: 
        - build-docker-userdb
      params: 
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.manifestfiledb)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-db-user
      taskRef:
        name: userdb-svc
      runAfter:
        - deploy-pods-db-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.manifestfiledbsvc)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-pods-user
      taskRef:
        name: user-deploy
      runAfter: 
        - deploy-service-db-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.manifestfile)"
      - name: output
        value: "$(params.outputfile)"
    - name: deploy-service-user
      taskRef: 
        name: user-svc
      runAfter:
        - deploy-pods-user
      params:
      - name: action
        value: "$(params.kubeaction)"
      - name: manifest
        value: "$(params.manifestfilesvc)"
      - name: output
        value: "$(params.outputfile)"
      
  results:
    - name: imagedigest
      description: result of image digest
      value: $(tasks.build-docker-user.results.IMAGE-DIGEST)
