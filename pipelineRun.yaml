apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: microservicedemo-pipelinerun
spec:
  pipelineRef:
    name: microservicedemo-pipeline
  serviceAccountName: sa
  resources:
  - name: level3-project
    resourceSpec:
      type: git
      params:
      - name: revision
        value: main
      - name: url
        value: https://github.com/Ra-tnt/level3-project
  params:
    - name: outputfile
      value: |
        - name: job-name
          valueFrom: '{.metadata.name}'
        - name: job-namespace
          valueFrom: '{.metadata.namespace}'
    - name: shipping-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: shipping
          labels:
            app: shipping
        spec:
          selector:
            matchLabels:
              app: shipping
          template:
            metadata:
              labels:
                app: shipping
            spec:
              containers:
              - name: shipping
                image: raghadq/shipping:testing
                ports:
                - containerPort: 80
    - name: shipping-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: shipping
        spec:
          type: NodePort
          selector:
            app: shipping
          ports:
          - port: 80
            targetPort: 80
    - name: carts-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: carts
          labels:
            app: carts
        spec:
          selector:
            matchLabels:
              app: carts
          template:
            metadata:
              labels:
                app: carts
            spec:
              containers:
              - name: carts
                image: raghadq/carts:testing
                ports:
                - containerPort: 80

    - name: carts-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: carts
        spec:
          type: NodePort
          selector:
            app: carts
          ports:
          - port: 80
            targetPort: 80
    - name: carts-manifestfiledb
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: carts-db
          labels:
            app: carts-db
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: carts-db
          template:
            metadata:
              labels:
                app: carts-db
            spec:
              containers:
              - name: carts-db
                image: mongo
                ports:
                - name: mongo
                  containerPort: 27017
    - name: carts-manifestfiledbsvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: carts-db
        spec:
          ports:
          - port: 27017
            targetPort: 27017
          selector:
            app: carts-db
    - name: orders-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: orders
          labels:
            app: orders
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: orders
          template:
            metadata:
              labels:
                app: orders
            spec:
              containers:
              - name: orders
                image: raghadq/orders
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 200m
                    memory: 500Mi
                ports:
                - containerPort: 80
    - name: orders-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: orders
          labels:
            app: orders
        spec:
          type: NodePort
          selector:
            app: orders
          ports:
          - port: 80
            targetPort: 80
    - name: orders-manifestfiledb
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: orders-db
          labels:
            app: orders-db
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: orders-db
          template:
            metadata:
              labels:
                app: orders-db
            spec:
              containers:
              - name: orders-db
                image: mongo
                ports:
                - name: mongo
                  containerPort: 27017
                volumeMounts:
                - mountPath: /tmp
                  name: tmp-volume
              volumes:
                - name: tmp-volume
                  emptyDir:
                    medium: Memory
    - name: orders-manifestfiledbsvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: orders-db
          labels:
            app: orders-db
        spec:
          ports:
          - port: 27017
            targetPort: 27017
          selector:
            app: orders-db
    - name: payment-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: payment
          labels:
            app: payment
        spec:
          selector:
            matchLabels:
              app: payment
          replicas: 1
          template:
            metadata:
              labels:
                app: payment
            spec:
              containers:
              - name: payment
                image: raghadq/payment
                resources:
                  limits:
                    cpu: 100m
                    memory: 100Mi
                  requests:
                    cpu: 99m
                    memory: 100Mi
                ports:
                - containerPort: 80
    - name: payment-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: payment
          labels:
            app: payment
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 80
          selector:
            app: payment
    - name: catalogue-manifestfile
      value: |
        apiVersion: apps/v1 
        kind: Deployment
        metadata:
          name: catalogue
          labels:
            app: catalogue
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: catalogue
          template:
            metadata:
              labels:
                app: catalogue
            spec:
              containers:
              - name: catalogue
                image: raghadq/catalogue
                command: ["/app"]
                args:
                - -port=80
                resources:
                  limits:
                    cpu: 100m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                ports:
                - containerPort: 80
                securityContext:
                  runAsNonRoot: false
    - name: catalogue-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: catalogue
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 80
          selector:
            app: catalogue
    - name: catalogue-manifestfiledb
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: catalogue-db
          labels:
            app: catalogue-db
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: catalogue-db
          template:
            metadata:
              labels:
                app: catalogue-db
            spec:
              containers:
              - name: catalogue-db
                image: raghadq/catalogue-db
                env:
                  - name: MYSQL_ROOT_PASSWORD
                    value: fake_password
                  - name: MYSQL_DATABASE
                    value: socksdb
                ports:
                - name: mysql
                  containerPort: 3306
    - name: catalogue-manifestfiledbsvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: catalogue-db
        spec:
          ports:
          - port: 3306
            targetPort: 3306
          selector:
            app: catalogue-db
    - name: user-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: user
          labels:
            app: user
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: user
          template:
            metadata:
              labels:
                app: user
            spec:
              containers:
              - name: user
                image: raghadq/user
                resources:
                  limits:
                    cpu: 300m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                ports:
                - containerPort: 80
                env:
                - name: mongo
                  value: user-db:27017
    - name: user-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: user
          labels:
            app: user
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 80
          selector:
            app: user

    - name: user-manifestfiledb
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: user-db
          labels:
            app: user-db
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: user-db
          template:
            metadata:
              labels:
                app: user-db
            spec:
              containers:
              - name: user-db
                image: raghadq/user-db
                ports:
                - name: mongo
                  containerPort: 27017
                volumeMounts:
                - mountPath: /tmp
                  name: tmp-volume
              volumes:
                - name: tmp-volume
                  emptyDir:
                    medium: Memory
    - name: user-manifestfiledbsvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: user-db
          labels:
            app: user-db
        spec:
          ports:
          - port: 27017
            targetPort: 27017
          selector:
            app: user-db
    - name: frontend-manifestfile
      value: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: front-end
          labels:
            app: front-end
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: front-end
          template:
            metadata:
              labels:
                app: front-end
            spec:
              containers:
              - name: front-end
                image: raghadq/front-end
                resources:
                  limits:
                    cpu: 300m
                    memory: 1000Mi
                  requests:
                    cpu: 100m
                    memory: 300Mi
                ports:
                - containerPort: 8079
                env:
                - name: SESSION_REDIS
                  value: "true"
    - name: frontend-manifestfilesvc
      value: |
        apiVersion: v1
        kind: Service
        metadata:
          name: front-end
          labels:
            app: front-end
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 8079
          selector:
            app: front-end
    - name: manifestfileingress
      value: |
        apiVersion: networking.k8s.io/v1beta1
        kind: Ingress
        metadata:
          name: front-end-ingress
          annotations:
            ingress.kubernetes.io/ssl-redirect: "false"
        spec:
          rules:
          - http:
              paths:
              - path: /
                backend:
                  serviceName: front-end
                  servicePort: 8079


